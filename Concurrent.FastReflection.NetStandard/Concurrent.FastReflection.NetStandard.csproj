<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFramework>netstandard2.0</TargetFramework>
	<PreserveCompilationContext>false</PreserveCompilationContext>
    <GeneratePackageOnBuild>True</GeneratePackageOnBuild>
    <AssemblyVersion>1.2.1.1</AssemblyVersion>
    <FileVersion>1.2.1.1</FileVersion>
    <Authors>vexe, ipavlu</Authors>
    <Company>vexe, ipavlu</Company>
    <Description>Fast, concurrently safe NetStandard 2.0  Reflection.Emit based dynamic invocation for parametric and paremeterless constructors, methods, properties and fields with caching support for already created delegates. Concurrent performance could be still improved, but concurrent safety was achieved!

This is work based on fork of github project of author Vexe:  https://github.com/vexe/Fast.Reflection

I was interested to make this code concurrently safe and compliant to NetStandard 2.0 and accessible from nuget.org</Description>
    <PackageLicenseUrl>https://github.com/ipavlu/Fast.Reflection/blob/master/LICENSE</PackageLicenseUrl>
    <PackageProjectUrl>https://github.com/ipavlu/Fast.Reflection</PackageProjectUrl>
    <RepositoryUrl>https://github.com/ipavlu/Fast.Reflection</RepositoryUrl>
    <PackageTags>1.2.1.1</PackageTags>
    <PackageReleaseNotes>First release.</PackageReleaseNotes>
    <Copyright>Copyright (c) 2015 [vexe], Copyright 2018 ipavlu</Copyright>
    <Product>Concurrent.FastReflection.NetStandard</Product>
    <PackageId>Concurrent.FastReflection.NetStandard</PackageId>
    <Version>1.2.1.1</Version>
    <PackageRequireLicenseAcceptance>False</PackageRequireLicenseAcceptance>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="System.Collections.Immutable" Version="1.5.0" />
    <PackageReference Include="System.Reflection.Emit.Lightweight" Version="4.3.0" />
  </ItemGroup>

</Project>
